name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: win32
          - os: macos-latest
            platform: darwin

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run tests
        run: bun run test

      - name: Build application
        run: bun run build
        env:
          NODE_ENV: production

      - name: Make distributables
        run: bunx electron-forge make --platform ${{ matrix.platform }}
        env:
          NODE_ENV: production

      - name: List build outputs (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          echo "=== Build outputs ==="
          find out/make -type f | sort
          echo "=== File sizes ==="
          find out/make -type f -exec ls -lh {} \;

      - name: List build outputs (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          echo === Build outputs ===
          dir /s /b out\make
          echo === File details ===
          dir /s out\make

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: distributables-${{ matrix.os }}
          path: |
            out/make/squirrel.windows/**/*.exe
            out/make/squirrel.windows/**/*.nupkg
            out/make/squirrel.windows/**/RELEASES
          if-no-files-found: error
          retention-days: 7

      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: distributables-${{ matrix.os }}
          path: |
            out/make/*.dmg
            out/make/zip/**/*.zip
            out/make/*.zip
          if-no-files-found: error
          retention-days: 7

      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: distributables-${{ matrix.os }}
          path: |
            out/make/deb/**/*.deb
            out/make/rpm/**/*.rpm
            out/make/*.deb
            out/make/*.rpm
            out/make/*.AppImage
          if-no-files-found: error
          retention-days: 7

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure
        run: ls -la artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/distributables-windows-latest/**/*.exe
            artifacts/distributables-windows-latest/**/*.nupkg
            artifacts/distributables-windows-latest/**/RELEASES
            artifacts/distributables-ubuntu-latest/**/*.deb
            artifacts/distributables-ubuntu-latest/**/*.rpm
            artifacts/distributables-ubuntu-latest/**/*.AppImage
            artifacts/distributables-macos-latest/**/*.dmg
            artifacts/distributables-macos-latest/**/*.zip
            artifacts/distributables-macos-latest/**/latest-mac.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}